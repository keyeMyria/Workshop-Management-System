# Generated by Django 2.0.7 on 2018-07-30 07:09

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(help_text='手机号', max_length=20, unique=True, verbose_name='手机号')),
                ('full_name', models.CharField(blank=True, help_text='姓名', max_length=20, null=True, verbose_name='姓名')),
                ('id_number', models.CharField(blank=True, error_messages={'unique': '此成员已存在'}, help_text='身份证号码', max_length=45, null=True, unique=True, verbose_name='身份证号码')),
                ('address', models.CharField(blank=True, help_text='家庭住址', max_length=100, null=True, verbose_name='家庭住址')),
                ('status', models.SmallIntegerField(choices=[(0, '已经离职'), (1, '在职')], default=1, help_text='状态', verbose_name='状态')),
                ('position', models.SmallIntegerField(choices=[(0, '普通员工'), (1, '组长')], default=0, help_text='职务', verbose_name='职务')),
                ('entry_date', models.DateTimeField(default=django.utils.timezone.now, help_text='入职时间', verbose_name='入职时间')),
                ('leaving_date', models.DateTimeField(blank=True, default=None, help_text='离职时间', null=True, verbose_name='离职时间')),
                ('department', models.SmallIntegerField(choices=[(1, '办公室'), (2, '裁剪组'), (3, '缝纫组'), (4, '熨烫组'), (5, '包装组'), (6, '运输组'), (7, '日工')], default=0, help_text='部门', verbose_name='部门')),
                ('is_staff', models.BooleanField(default=False, help_text='勾选可登录', verbose_name='是否可以登录后台')),
                ('is_active', models.BooleanField(default=False, help_text='勾选有效', verbose_name='是否为有效有效用户')),
                ('is_superuser', models.BooleanField(default=False, help_text='勾选为超级管理员', verbose_name='超级管理员')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '员工',
                'verbose_name_plural': '员工',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
